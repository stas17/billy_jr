<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'old_sound_rabbit_mq.parts_holder' shared service.

include_once $this->targetDirs[3].'/vendor/php-amqplib/rabbitmq-bundle/RabbitMq/AmqpPartsHolder.php';

$this->services['old_sound_rabbit_mq.parts_holder'] = $instance = new \OldSound\RabbitMqBundle\RabbitMq\AmqpPartsHolder();

$a = ($this->services['old_sound_rabbit_mq.payment_producer'] ?? $this->load('getOldSoundRabbitMq_PaymentProducerService.php'));
$b = ($this->services['old_sound_rabbit_mq.hold_producer'] ?? $this->load('getOldSoundRabbitMq_HoldProducerService.php'));
$c = ($this->services['old_sound_rabbit_mq.payout_producer'] ?? $this->load('getOldSoundRabbitMq_PayoutProducerService.php'));
$d = ($this->services['old_sound_rabbit_mq.confirm_producer'] ?? $this->load('getOldSoundRabbitMq_ConfirmProducerService.php'));
$e = ($this->services['old_sound_rabbit_mq.unhold_producer'] ?? $this->load('getOldSoundRabbitMq_UnholdProducerService.php'));
$f = ($this->services['old_sound_rabbit_mq.transfer_producer'] ?? $this->load('getOldSoundRabbitMq_TransferProducerService.php'));
$g = ($this->services['old_sound_rabbit_mq.billi_event_producer'] ?? $this->load('getOldSoundRabbitMq_BilliEventProducerService.php'));
$h = ($this->services['old_sound_rabbit_mq.payment_consumer'] ?? $this->load('getOldSoundRabbitMq_PaymentConsumerService.php'));
$i = ($this->services['old_sound_rabbit_mq.payout_consumer'] ?? $this->load('getOldSoundRabbitMq_PayoutConsumerService.php'));
$j = ($this->services['old_sound_rabbit_mq.hold_consumer'] ?? $this->load('getOldSoundRabbitMq_HoldConsumerService.php'));
$k = ($this->services['old_sound_rabbit_mq.confirm_consumer'] ?? $this->load('getOldSoundRabbitMq_ConfirmConsumerService.php'));
$l = ($this->services['old_sound_rabbit_mq.unhold_consumer'] ?? $this->load('getOldSoundRabbitMq_UnholdConsumerService.php'));
$m = ($this->services['old_sound_rabbit_mq.transfer_consumer'] ?? $this->load('getOldSoundRabbitMq_TransferConsumerService.php'));

$instance->addPart('old_sound_rabbit_mq.base_amqp', $a);
$instance->addPart('old_sound_rabbit_mq.base_amqp', $b);
$instance->addPart('old_sound_rabbit_mq.base_amqp', $c);
$instance->addPart('old_sound_rabbit_mq.base_amqp', $d);
$instance->addPart('old_sound_rabbit_mq.base_amqp', $e);
$instance->addPart('old_sound_rabbit_mq.base_amqp', $f);
$instance->addPart('old_sound_rabbit_mq.base_amqp', $g);
$instance->addPart('old_sound_rabbit_mq.base_amqp', $h);
$instance->addPart('old_sound_rabbit_mq.base_amqp', $i);
$instance->addPart('old_sound_rabbit_mq.base_amqp', $j);
$instance->addPart('old_sound_rabbit_mq.base_amqp', $k);
$instance->addPart('old_sound_rabbit_mq.base_amqp', $l);
$instance->addPart('old_sound_rabbit_mq.base_amqp', $m);
$instance->addPart('old_sound_rabbit_mq.producer', $a);
$instance->addPart('old_sound_rabbit_mq.producer', $b);
$instance->addPart('old_sound_rabbit_mq.producer', $c);
$instance->addPart('old_sound_rabbit_mq.producer', $d);
$instance->addPart('old_sound_rabbit_mq.producer', $e);
$instance->addPart('old_sound_rabbit_mq.producer', $f);
$instance->addPart('old_sound_rabbit_mq.producer', $g);
$instance->addPart('old_sound_rabbit_mq.consumer', $h);
$instance->addPart('old_sound_rabbit_mq.consumer', $i);
$instance->addPart('old_sound_rabbit_mq.consumer', $j);
$instance->addPart('old_sound_rabbit_mq.consumer', $k);
$instance->addPart('old_sound_rabbit_mq.consumer', $l);
$instance->addPart('old_sound_rabbit_mq.consumer', $m);

return $instance;
